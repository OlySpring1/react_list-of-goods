{"version":3,"sources":["component/GoodsList.js","App.js","index.js"],"names":["GoodList","state","goods","props","count","reverse","setState","sort","a","b","localeCompare","reset","sortLength","length","selectGoodsLength","len","letterLimits","Array","keys","this","filter","good","map","key","type","onClick","value","onChange","event","target","limit","React","Component","goodsFromServer","App","isToggleOn","className","ReactDOM","render","document","getElementById"],"mappings":"4OAsEeA,E,4MAlEbC,MAAQ,CACNC,MAAM,YAAK,EAAKC,MAAMD,OACtBE,MAAO,G,EAGTC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAAEC,MAAO,YAAID,EAAMC,OAAOG,e,EAGpDE,KAAO,WACL,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI3DE,MAAQ,WACN,EAAKL,SAAS,CACZJ,MAAO,EAAKC,MAAMD,MAClBE,MAAO,K,EAIXQ,WAAa,WACX,EAAKN,UAAS,SAAAL,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,e,EAIxDC,kBAAoB,SAACC,GACnB,EAAKT,SAAS,CAAEF,MAAOW,K,uDAGf,IAAD,OACDC,EAAY,YAAOC,MAAM,IAAIC,QAD5B,EAEkBC,KAAKlB,MAAtBC,EAFD,EAECA,MAAOE,EAFR,EAEQA,MAEf,OACE,oCACE,4BACGF,EAAMkB,QAAO,SAAAC,GAAI,OAAIA,EAAKR,QAAUT,KAAOkB,KAAI,SAAAD,GAAI,OAClD,wBAAIE,IAAKF,GAAOA,OAGpB,4BAAQG,KAAK,SAASC,QAASN,KAAKd,SAApC,WACA,4BAAQmB,KAAK,SAASC,QAASN,KAAKZ,MAApC,qBACA,4BAAQiB,KAAK,SAASC,QAASN,KAAKR,OAApC,SACA,4BAAQa,KAAK,SAASC,QAASN,KAAKP,YAApC,kBAEA,4BACEc,MAAOtB,EACPuB,SAAU,SAAAC,GAAK,OAAI,EAAKd,kBAAkBc,EAAMC,OAAOH,SAEtDV,EAAaM,KAAI,SAAAQ,GAAK,OACrB,4BAAQJ,MAAOI,EAAQ,EAAGP,IAAKO,EAAQ,GAAIA,EAAQ,Y,GAtDxCC,IAAMC,WCCvBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BaC,E,4MAxBbjC,MAAQ,CACNkC,YAAY,G,uDAGJ,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,qCACCjB,KAAKlB,MAAMkC,WAAa,kBAAC,EAAD,CAAUjC,MAAO+B,IAEtC,4BACET,KAAK,SACLC,QAAS,kBAAM,EAAKnB,SAAS,CAC3B6B,YAAY,MAHhB,c,GAXMJ,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eed27524.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodList extends React.Component {\n  state = {\n    goods: [...this.props.goods],\n    count: 0,\n  }\n\n  reverse = () => {\n    this.setState(state => ({ goods: [...state.goods].reverse() }));\n  }\n\n  sort = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: this.props.goods,\n      count: 1,\n    });\n  }\n\n  sortLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  selectGoodsLength = (len) => {\n    this.setState({ count: len });\n  }\n\n  render() {\n    const letterLimits = [...Array(10).keys()];\n    const { goods, count } = this.state;\n\n    return (\n      <>\n        <ul>\n          {goods.filter(good => good.length >= count).map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n        <button type=\"button\" onClick={this.reverse}>Reverse</button>\n        <button type=\"button\" onClick={this.sort}>Sort by alphabet </button>\n        <button type=\"button\" onClick={this.reset}>Reset</button>\n        <button type=\"button\" onClick={this.sortLength}>Sort by length</button>\n\n        <select\n          value={count}\n          onChange={event => this.selectGoodsLength(event.target.value)}\n        >\n          {letterLimits.map(limit => (\n            <option value={limit + 1} key={limit + 1}>{limit + 1}</option>\n          ))}\n        </select>\n      </>\n\n    );\n  }\n}\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport './App.css';\nimport GoodList from './component/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isToggleOn: false,\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {this.state.isToggleOn ? <GoodList goods={goodsFromServer} />\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({\n                isToggleOn: true,\n              })}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}